// Copyright (C) 2005-2008 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD, an XML Schema to
// C++ data binding compiler.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// In addition, as a special exception, Code Synthesis Tools CC gives
// permission to link this program with the Xerces-C++ library (or with
// modified versions of Xerces-C++ that use the same license as Xerces-C++),
// and distribute linked combinations including the two. You must obey
// the GNU General Public License version 2 in all respects for all of
// the code used other than Xerces-C++. If you modify this copy of the
// program, you may extend this exception to your version of the program,
// but you are not obligated to do so. If you do not wish to do so, delete
// this exception statement from your version.
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

// Begin prologue.
//
//
// End prologue.

#include "SCL_Enums-pskel.h"

namespace IEC61850
{
  namespace SCL
  {
    namespace Validation
    {
    }
  }
}

namespace IEC61850
{
  namespace SCL
  {
    namespace Validation
    {
      // tPredefinedPTypeEnum_pskel
      //

      void tPredefinedPTypeEnum_pskel::
      post_tPredefinedPTypeEnum ()
      {
      }

      // tExtensionPTypeEnum_pskel
      //

      void tExtensionPTypeEnum_pskel::
      post_tExtensionPTypeEnum ()
      {
      }

      // tPTypeEnum_pskel
      //

      void tPTypeEnum_pskel::
      post_tPTypeEnum ()
      {
      }

      // tPredefinedAttributeNameEnum_pskel
      //

      void tPredefinedAttributeNameEnum_pskel::
      post_tPredefinedAttributeNameEnum ()
      {
      }

      // tExtensionAttributeNameEnum_pskel
      //

      void tExtensionAttributeNameEnum_pskel::
      post_tExtensionAttributeNameEnum ()
      {
        post_tRestrName1stL ();
      }

      // tAttributeNameEnum_pskel
      //

      void tAttributeNameEnum_pskel::
      post_tAttributeNameEnum ()
      {
      }

      // tPredefinedCommonConductingEquipmentEnum_pskel
      //

      void tPredefinedCommonConductingEquipmentEnum_pskel::
      post_tPredefinedCommonConductingEquipmentEnum ()
      {
      }

      // tExtensionEquipmentEnum_pskel
      //

      void tExtensionEquipmentEnum_pskel::
      post_tExtensionEquipmentEnum ()
      {
      }

      // tCommonConductingEquipmentEnum_pskel
      //

      void tCommonConductingEquipmentEnum_pskel::
      post_tCommonConductingEquipmentEnum ()
      {
      }

      // tPowerTransformerEnum_pskel
      //

      void tPowerTransformerEnum_pskel::
      post_tPowerTransformerEnum ()
      {
      }

      // tTransformerWindingEnum_pskel
      //

      void tTransformerWindingEnum_pskel::
      post_tTransformerWindingEnum ()
      {
      }

      // tPredefinedEquipmentEnum_pskel
      //

      void tPredefinedEquipmentEnum_pskel::
      post_tPredefinedEquipmentEnum ()
      {
      }

      // tEquipmentEnum_pskel
      //

      void tEquipmentEnum_pskel::
      post_tEquipmentEnum ()
      {
      }

      // tPredefinedGeneralEquipmentEnum_pskel
      //

      void tPredefinedGeneralEquipmentEnum_pskel::
      post_tPredefinedGeneralEquipmentEnum ()
      {
      }

      // tExtensionGeneralEquipmentEnum_pskel
      //

      void tExtensionGeneralEquipmentEnum_pskel::
      post_tExtensionGeneralEquipmentEnum ()
      {
      }

      // tGeneralEquipmentEnum_pskel
      //

      void tGeneralEquipmentEnum_pskel::
      post_tGeneralEquipmentEnum ()
      {
      }

      // tServiceSettingsEnum_pskel
      //

      void tServiceSettingsEnum_pskel::
      post_tServiceSettingsEnum ()
      {
      }

      // tPhaseEnum_pskel
      //

      void tPhaseEnum_pskel::
      post_tPhaseEnum ()
      {
      }

      // tAuthenticationEnum_pskel
      //

      void tAuthenticationEnum_pskel::
      post_tAuthenticationEnum ()
      {
      }

      // tAssociationKindEnum_pskel
      //

      void tAssociationKindEnum_pskel::
      post_tAssociationKindEnum ()
      {
      }

      // tLPHDEnum_pskel
      //

      void tLPHDEnum_pskel::
      post_tLPHDEnum ()
      {
      }

      // tLLN0Enum_pskel
      //

      void tLLN0Enum_pskel::
      post_tLLN0Enum ()
      {
      }

      // tDomainLNGroupAEnum_pskel
      //

      void tDomainLNGroupAEnum_pskel::
      post_tDomainLNGroupAEnum ()
      {
      }

      // tDomainLNGroupCEnum_pskel
      //

      void tDomainLNGroupCEnum_pskel::
      post_tDomainLNGroupCEnum ()
      {
      }

      // tDomainLNGroupGEnum_pskel
      //

      void tDomainLNGroupGEnum_pskel::
      post_tDomainLNGroupGEnum ()
      {
      }

      // tDomainLNGroupIEnum_pskel
      //

      void tDomainLNGroupIEnum_pskel::
      post_tDomainLNGroupIEnum ()
      {
      }

      // tDomainLNGroupMEnum_pskel
      //

      void tDomainLNGroupMEnum_pskel::
      post_tDomainLNGroupMEnum ()
      {
      }

      // tDomainLNGroupPEnum_pskel
      //

      void tDomainLNGroupPEnum_pskel::
      post_tDomainLNGroupPEnum ()
      {
      }

      // tDomainLNGroupREnum_pskel
      //

      void tDomainLNGroupREnum_pskel::
      post_tDomainLNGroupREnum ()
      {
      }

      // tDomainLNGroupSEnum_pskel
      //

      void tDomainLNGroupSEnum_pskel::
      post_tDomainLNGroupSEnum ()
      {
      }

      // tDomainLNGroupTEnum_pskel
      //

      void tDomainLNGroupTEnum_pskel::
      post_tDomainLNGroupTEnum ()
      {
      }

      // tDomainLNGroupXEnum_pskel
      //

      void tDomainLNGroupXEnum_pskel::
      post_tDomainLNGroupXEnum ()
      {
      }

      // tDomainLNGroupYEnum_pskel
      //

      void tDomainLNGroupYEnum_pskel::
      post_tDomainLNGroupYEnum ()
      {
      }

      // tDomainLNGroupZEnum_pskel
      //

      void tDomainLNGroupZEnum_pskel::
      post_tDomainLNGroupZEnum ()
      {
      }

      // tDomainLNEnum_pskel
      //

      void tDomainLNEnum_pskel::
      post_tDomainLNEnum ()
      {
      }

      // tPredefinedLNClassEnum_pskel
      //

      void tPredefinedLNClassEnum_pskel::
      post_tPredefinedLNClassEnum ()
      {
      }

      // tExtensionLNClassEnum_pskel
      //

      void tExtensionLNClassEnum_pskel::
      post_tExtensionLNClassEnum ()
      {
      }

      // tLNClassEnum_pskel
      //

      void tLNClassEnum_pskel::
      post_tLNClassEnum ()
      {
      }

      // tPredefinedCDCEnum_pskel
      //

      void tPredefinedCDCEnum_pskel::
      post_tPredefinedCDCEnum ()
      {
      }

      // tExtensionCDCEnum_pskel
      //

      void tExtensionCDCEnum_pskel::
      post_tExtensionCDCEnum ()
      {
      }

      // tCDCEnum_pskel
      //

      void tCDCEnum_pskel::
      post_tCDCEnum ()
      {
      }

      // tTrgOptEnum_pskel
      //

      void tTrgOptEnum_pskel::
      post_tTrgOptEnum ()
      {
      }

      // tTrgOptControlEnum_pskel
      //

      void tTrgOptControlEnum_pskel::
      post_tTrgOptControlEnum ()
      {
      }

      // tFCEnum_pskel
      //

      void tFCEnum_pskel::
      post_tFCEnum ()
      {
      }

      // tServiceFCEnum_pskel
      //

      void tServiceFCEnum_pskel::
      post_tServiceFCEnum ()
      {
      }

      // tPredefinedBasicTypeEnum_pskel
      //

      void tPredefinedBasicTypeEnum_pskel::
      post_tPredefinedBasicTypeEnum ()
      {
      }

      // tExtensionBasicTypeEnum_pskel
      //

      void tExtensionBasicTypeEnum_pskel::
      post_tExtensionBasicTypeEnum ()
      {
      }

      // tBasicTypeEnum_pskel
      //

      void tBasicTypeEnum_pskel::
      post_tBasicTypeEnum ()
      {
      }

      // tValKindEnum_pskel
      //

      void tValKindEnum_pskel::
      post_tValKindEnum ()
      {
      }

      // tGSEControlTypeEnum_pskel
      //

      void tGSEControlTypeEnum_pskel::
      post_tGSEControlTypeEnum ()
      {
      }

      // tSIUnitEnum_pskel
      //

      void tSIUnitEnum_pskel::
      post_tSIUnitEnum ()
      {
      }

      // tUnitMultiplierEnum_pskel
      //

      void tUnitMultiplierEnum_pskel::
      post_tUnitMultiplierEnum ()
      {
      }
    }
  }
}

#include <cassert>

namespace IEC61850
{
  namespace SCL
  {
    namespace Validation
    {
    }
  }
}

namespace IEC61850
{
  namespace SCL
  {
    namespace Validation
    {
    }
  }
}

namespace IEC61850
{
  namespace SCL
  {
    namespace Validation
    {
    }
  }
}

// Begin epilogue.
//
//
// End epilogue.

